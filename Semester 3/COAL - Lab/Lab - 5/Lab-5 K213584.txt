;Question 1
;Roll number: 21K-3584
INCLUDE irvine32.inc
.data
val1 DWORD 8000
.code
main PROC
	mov eax, val1
	add eax, 1
	call DumpRegs
main ENDP
END main
;CF = 0, SF = 0

;Question 2
;Roll number: 21K-3584
INCLUDE irvine32.inc
.data
val1 DWORD 8000
.code
main PROC
	mov ax, 7FF0h 	; CF=0  SF=0  ZF=1  OF=0  AF=0  PF=1
	call DumpRegs
	add al, 10h		; CF=1  SF=0  ZF=1  OF=0  AF=0  PF=1
	call DumpRegs 
	add ah, 1		; CF=0  SF=1  ZF=0  OF=1  AF=1  PF=0
	call DumpRegs 
	add ax, 2		; CF=0  SF=1  ZF=0  OF=0  AF=0  PF=0
	call DumpRegs
main ENDP
END main

;Question 3
;Roll number: 21K-3584
INCLUDE irvine32.inc
.data
arrayB BYTE 61, 43, 11, 52, 25
arrayNEW BYTE ?
.code
main PROC
	mov esi, OFFSET arrayB
	mov al, [esi]
	mov arrayNEW, al
	inc esi
	mov al, [esi]
	mov [arrayNEW+1], al 
	inc esi
	mov al, [esi]
	mov [arrayNEW+2], al
	inc esi
	mov al, [esi]
	mov [arrayNEW+3], al
	inc esi
	mov al, [esi]
	mov [arrayNEW+4], al
main ENDP
END main

;Question: 4
;Roll Number: 21K-3584
include irvine32.inc
.data
	arrayB BYTE 10, 20, 30 
	arrayW WORD 150, 250, 350 
	arrayD DWORD 600, 1200, 1800
.data?
	sum1 DWORD ?
	sum2 DWORD ?
	sum3 DWORd ?
.code
main PROC
	mov esi, OFFSET arrayB
	mov edi, OFFSET arrayW
	mov esp, OFFSET arrayD
	mov eax, 0
	add al, [esi]
	add ax, [edi]
	add eax, [esp]
	mov sum1, eax
	mov eax, 0
	add al, [esi + TYPE arrayB]
	add ax, [edi + TYPE arrayW]
	add eax, [esp + TYPE arrayD]
	mov sum2, eax
	mov eax, 0
	add al, [esi + TYPE arrayB * 2]
	add ax, [edi + TYPE arrayW * 2]
	add eax, [esp + TYPE arrayD * 2]
	call DumpRegs
	exit
main ENDP
END main

;Question 5
;Roll Number: 21K-3584

include irvine32.inc
move textequ <mov>

.data
	array1 BYTE 10, 20, 30, 40
.data?
	array2 BYTE 4 DUP (?)
.code
main PROC
	move esi, OFFSET array1
	move edi, OFFSET array2
	move eax, 0 ;Will store array1 elem
	move al, [esi]
	move [edi + TYPE array2 * 3], al
	move al, [esi + TYPE array1]
	move [edi + TYPE array2 * 2], al
	move al, [esi + TYPE array1 * 2]
	move [edi + TYPE array2], al
	move al, [esi + TYPE array1 * 3]
	move [edi], al
	call DumpRegs
	exit
main ENDP
END main

;Question 6
;Roll Number: 21K-3584

include irvine32.inc
;move textequ <mov>

.data
	arrayD DWORD 100h, 230h, 430h, 600h, 777o
.data?
	subArray DWORD 5 DUP(?)
.code
main PROC
	mov esi, offset arrayD
	mov edi, offset subArray
	mov eax, [esi]
	sub eax, 39h
	mov [edi], eax
	mov eax, [esi + TYPE DWORD]
	sub eax, 49h
	mov [edi + TYPE DWORD], eax
	mov eax, [esi + TYPE DWORD * 2]
	sub eax, 59h
	mov [edi + TYPE DWORD * 2], eax
	mov eax, [esi + TYPE DWORD * 3]
	sub eax, 69h
	mov [edi + TYPE DWORD * 3], esi
	mov eax, [esi + TYPE DWORD * 4]
	sub eax, 79h
	mov [edi + TYPE DWORD * 4], eax
	call DumpRegs
	exit
main ENDP
END main

;Question 7
;Roll Number: 21K-3584

include irvine32.inc
;move textequ <mov>

.data
	arrayB BYTE 60, 70, 80
	arrayW WORD 150, 250, 350
	arrayD DWORD 600, 1200, 1800
.data?
	sum1 BYTE ?
	sum2 WORD ?
	sum3 DWORD ?
.code
main PROC
	mov esi, OFFSET arrayB
	mov eax, 0
	add al, [esi]
	add al, [esi + TYPE arrayB * 2]
	mov esi, OFFSET arrayW
	mov ebx, 0
	add bx, [esi]
	add bx, [esi + TYPE arrayW * 2]
	mov esi, OFFSET arrayD
	mov ecx, 0
	mov esi, OFFSET arrayD
	add ecx, [esi + TYPE arrayD * 2]
	add ecx, [esi]
main ENDP
END main